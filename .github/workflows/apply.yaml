name: Terraform CI/CD

on:
  push:
    branches:
      - main  # or the branch you want to trigger the action

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2.0.0
      with:
        terraform_version: 1.5.0  # Use the desired Terraform version

    - name: Configure Terraform variables
      run: |
        echo "do_token = '${{ secrets.DO_TOKEN }}'" >> terraform.tfvars
        echo "ssh_public_key_path = '${{ secrets.SSH_PUBLIC_KEY_PATH }}'" >> terraform.tfvars
        echo "ssh_private_key_path = '${{ secrets.SSH_PRIVATE_KEY_PATH }}'" >> terraform.tfvars
        echo "droplet_image = 'ubuntu-24-04-x64'" >> terraform.tfvars
        echo "droplet_name = 'sumit'" >> terraform.tfvars
        echo "droplet_region = 'blr1'" >> terraform.tfvars
        echo "droplet_size = 's-1vcpu-1gb'" >> terraform.tfvars
        echo "aws_access_key = '${{ secrets.AWS_ACCESS_KEY }}'" >> terraform.tfvars
        echo "aws_secret_key = '${{ secrets.AWS_SECRET_KEY }}'" >> terraform.tfvars
        echo "aws_region = 'ap-south-1'" >> terraform.tfvars
        echo "node_version = '18'" >> terraform.tfvars
        echo "dragonfly_repo = 'git@github.com:sumit-linearloop/digitalocean-api.git'" >> terraform.tfvars
        echo "dragonfly_port = 3000" >> terraform.tfvars
        echo "dragonfly_domain = 'api'" >> terraform.tfvars
        echo "dragonfly_secret = 'master'" >> terraform.tfvars
        echo "dragonfly_branch = 'master'" >> terraform.tfvars
        echo "firefly_repo = 'git@github.com:sumit-linearloop/digitalocean-api.git'" >> terraform.tfvars
        echo "firefly_port = 1500" >> terraform.tfvars
        echo "firefly_domain = 'dev'" >> terraform.tfvars
        echo "firefly_secret = 'dev'" >> terraform.tfvars
        echo "firefly_branch = 'DEV'" >> terraform.tfvars
        echo "github_token = '${{ secrets.GITHUB_TOKEN }}'" >> terraform.tfvars

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -out=tfplan

    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
