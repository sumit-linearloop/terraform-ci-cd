# name: Terraform CI/CD

# on:
#   push:
#     branches:
#       - main  # Adjust as necessary for your default branch
#   pull_request:
#     branches:
#       - main  # Adjust as necessary for your default branch

# jobs:
#   terraform:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.9.8  # Use the version you need

#       - name: Terraform Init
#         run: terraform init

#       - name: Terraform Plan
#         run: terraform plan -out=tfplan

#       - name: Terraform Apply
#         run: |
#           echo "Running the initialization script..."
#           bash /tmp/initial_setup.sh
#         env:
#           SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#           NODE_VERSION: ${{ secrets.NODE_VERSION }}
#           TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#           TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
#           TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}



name: Terraform Apply

on:
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform Deployment'
    runs-on: ubuntu-latest

    env:
      TF_VAR_digitalocean_token: ${{ secrets.TF_VAR_digitalocean_token }}  # DigitalOcean token from secrets

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init
        env:
          TF_LOG: INFO  # Set Terraform logging level to INFO for more details

      - name: Terraform Plan
        run: terraform plan
        env:
          TF_VAR_digitalocean_token: ${{ secrets.TF_VAR_digitalocean_token }}  # Pass the token as an environment variable

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        env:
          TF_VAR_digitalocean_token: ${{ secrets.TF_VAR_digitalocean_token }}  # Pass the token as an environment variable
