name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - DEV # Include other branches if necessary

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ secrets.NODE_VERSION }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa # Use the private key directly
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to DigitalOcean
        env:
          DO_TOKEN: ${{ secrets.DO_TOKEN }}
          DRAGONFLY_REPO: ${{ secrets.DRAGONFLY_REPO }}
          DRAGONFLY_PORT: ${{ secrets.DRAGONFLY_PORT }}
          DRAGONFLY_SECRET: ${{ secrets.DRAGONFLY_SECRET }}
          FIREFLY_REPO: ${{ secrets.FIREFLY_REPO }}
          FIREFLY_PORT: ${{ secrets.FIREFLY_PORT }}
          FIREFLY_SECRET: ${{ secrets.FIREFLY_SECRET }}
        run: |
          # SSH into your Droplet and run deployment commands
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
          # Pull the latest code from the repository for Dragonfly
          if [ ! -d "/var/www/dragonfly" ]; then
            git clone $DRAGONFLY_REPO /var/www/dragonfly
          else
            cd /var/www/dragonfly && git pull
          fi

          # Install dependencies and start the Dragonfly application
          cd /var/www/dragonfly
          npm install
          pm2 start --name "dragonfly" npm -- start -- --port=$DRAGONFLY_PORT

          # Pull the latest code from the repository for Firefly
          if [ ! -d "/var/www/firefly" ]; then
            git clone $FIREFLY_REPO /var/www/firefly
          else
            cd /var/www/firefly && git pull
          fi

          # Install dependencies and start the Firefly application
          cd /var/www/firefly
          npm install
          pm2 start --name "firefly" npm -- start -- --port=$FIREFLY_PORT
          EOF
