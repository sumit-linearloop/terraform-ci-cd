name: Terraform CI/CD Pipeline

on:
  workflow_dispatch:  # Enables manual trigger
    inputs:
      action:  # Input to choose between apply or destroy
        description: "Select the Terraform action to perform"
        required: true
        default: "setup_dragonfly"  # Default action if not specified
        type: choice
        options:
          - setup_dragonfly
          - destroy_dragonfly

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2.0.0
        with:
          terraform_version: 1.5.0  # Use the latest stable version

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply or Destroy
        env:
          SSH_PUBLIC_KEY: ${{ secrets.SSH_PUBLIC_KEY }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          if [ "${{ github.event.inputs.action }}" == "setup_dragonfly" ]; then
            echo "Applying setup_dragonfly..."
            terraform apply -auto-approve -var="ssh_public_key=${SSH_PUBLIC_KEY}" -var="ssh_private_key=${SSH_PRIVATE_KEY}" -var="app_action=setup_dragonfly" || { 
              echo "Terraform apply for setup_dragonfly failed"; 
              exit 1; 
            }
          elif [ "${{ github.event.inputs.action }}" == "destroy_dragonfly" ]; then
            echo "Destroying dragonfly..."
            terraform destroy -auto-approve -var="ssh_public_key=${SSH_PUBLIC_KEY}" -var="ssh_private_key=${SSH_PRIVATE_KEY}" -var="app_action=destroy_dragonfly" || { 
              echo "Terraform destroy for destroy_dragonfly failed"; 
              exit 1; 
            }
          else
            echo "Invalid action specified"; 
            exit 1;
          fi

      - name: SSH into server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}  # Assuming your private key is stored in secrets
        run: |
          echo "${SSH_PRIVATE_KEY}" > private_key.pem  # Write the private key to a file
          chmod 600 private_key.pem  # Secure the private key file
          ssh -i private_key.pem root@139.59.64.15 "echo 'SSH connection successful!'" || { 
            echo "SSH connection failed"; 
            exit 1; 
          }
