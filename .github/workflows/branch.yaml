name: Terraform CI/CD with Code Build

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  workflow_dispatch:  # Allow manual triggers for apply/destroy

env:
  SSH_USER: root  # Adjust the user if necessary

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the latest code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      # 3. Configure SSH agent for accessing your server
      - name: Configure SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 4. Configure AWS credentials (optional, only if you need AWS resources)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 5. Terraform Init to initialize the project
      - name: Terraform Init
        run: terraform init

      # 6. Terraform Plan to preview changes
      - name: Terraform Plan
        run: |
          terraform plan \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var="ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}" \
            -var="app_action=setup_dragonfly" || exit 1

      # 7. Terraform Apply (Manual or Automatic Trigger)
      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch' || github.ref_name == 'main'
        run: |
          terraform apply -auto-approve \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var="ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}" \
            -var="app_action=${{ github.event.inputs.app_action || 'setup_dragonfly' }}" || exit 1

      # 8. Build and Deploy Application
      - name: Build Application
        run: |
          cd /var/www/app  # Adjust this to your project path
          npm install  # Install dependencies
          npm run build  # Build the application
          pm2 restart all  # Restart the app using PM2

      # 9. Destroy Infrastructure (Manual Trigger)
      - name: Terraform Destroy
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.app_action == 'destroy_dragonfly'
        run: |
          terraform destroy -auto-approve \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var="ssh_private_key=${{ secrets.SSH_PRIVATE_KEY }}" || exit 1
